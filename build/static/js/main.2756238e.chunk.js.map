{"version":3,"sources":["reducers/todo.reducer.js","context/todos.context.js","hooks/useLocalStorageReducer.js","hooks/useInputState.js","EditTodoForm.js","Todo.js","hooks/useToggle.js","TodoList.js","TodoForm.js","TodoApp.js","App.js","serviceWorker.js","index.js"],"names":["reducer","state","action","type","concat","Object","toConsumableArray","id","uuid","task","completed","filter","todo","map","objectSpread","newTask","defaultTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","_useLocalStorageReduc","key","defaultVal","_useReducer","useReducer","value","JSON","parse","window","localStorage","getItem","String","e","_useReducer2","slicedToArray","dispatch","useEffect","setItem","stringify","useLocalStorageReducer","todoReducer","_useLocalStorageReduc2","todos","react_default","a","createElement","Provider","children","useInputState","initialVal","_useState","useState","_useState2","setValue","target","EditTodoForm","_ref","toggleEditForm","useContext","_useInputState","_useInputState2","handleChange","reset","onSubmit","preventDefault","style","marginLeft","width","TextField","margin","onChange","fullWidth","autoFocus","memo","_useToggle","arguments","length","undefined","setState","useToggle","_useToggle2","isEditing","toggle","ListItem","height","Fragment","Checkbox","tabIndex","checked","onClick","ListItemText","textDecoration","ListItemSecondaryAction","IconButton","aria-label","Delete_default","Edit_default","TodoList","Paper","List","i","src_Todo","assign","Divider","TodoForm","padding","label","TodoApp","backgroundColor","elevation","AppBar","color","position","Toolbar","Typography","Grid","container","justify","marginTop","item","xs","md","lg","App","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2756238e.chunk.js","sourcesContent":["import uuid from 'uuid/v4';\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD':\r\n      return [...state, { id: uuid(), task: action.task, completed: false }];\r\n    case 'REMOVE':\r\n      return state.filter(todo => todo.id !== action.id);\r\n    case 'TOGGLE':\r\n      return state.map(todo =>\r\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n      );\r\n    case 'EDIT':\r\n      return state.map(todo =>\r\n        todo.id === action.id ? { ...todo, task: action.newTask } : todo\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { createContext } from 'react';\r\nimport { useLocalStorageReducer } from '../hooks/useLocalStorageReducer';\r\nimport todoReducer from '../reducers/todo.reducer';\r\n\r\nconst defaultTodos = [\r\n  { id: 44, task: 'Mow the lawn using the new machine', completed: false }\r\n];\r\n\r\nexport const TodosContext = createContext();\r\nexport const DispatchContext = createContext();\r\n\r\nexport function TodosProvider(props) {\r\n  const [todos, dispatch] = useLocalStorageReducer(\r\n    'todos',\r\n    defaultTodos,\r\n    todoReducer\r\n  );\r\n  return (\r\n    <TodosContext.Provider value={todos}>\r\n      <DispatchContext.Provider value={dispatch}>\r\n        {props.children}\r\n      </DispatchContext.Provider>\r\n    </TodosContext.Provider>\r\n  );\r\n}\r\n","import { useReducer, useEffect } from 'react';\r\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\r\n  const [state, dispatch] = useReducer(reducer, defaultVal, () => {\r\n    let value;\r\n    try {\r\n      value = JSON.parse(\r\n        window.localStorage.getItem(key) || String(defaultVal)\r\n      );\r\n    } catch (e) {\r\n      value = defaultVal;\r\n    }\r\n    return value;\r\n  });\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [state]);\r\n  return [state, dispatch];\r\n}\r\nexport { useLocalStorageReducer };\r\n","import { useState } from 'react';\r\nexport default initialVal => {\r\n  const [value, setValue] = useState(initialVal);\r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n  };\r\n  const reset = () => {\r\n    setValue('');\r\n  };\r\n  return [value, handleChange, reset];\r\n};\r\n","import React, { useContext } from 'react';\r\nimport useInputState from './hooks/useInputState';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { DispatchContext } from './context/todos.context';\r\n\r\nexport default function EditTodoForm({ id, task, toggleEditForm }) {\r\n  const dispatch = useContext(DispatchContext);\r\n  const [value, handleChange, reset] = useInputState(task);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        dispatch({ type: 'EDIT', id: id, newTask: value });\r\n        reset();\r\n        toggleEditForm();\r\n      }}\r\n      style={{ marginLeft: '1rem', width: '50%' }}\r\n    >\r\n      <TextField\r\n        margin='normal'\r\n        value={value}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        autoFocus\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import React, { useContext, memo } from 'react';\r\nimport useToggle from './hooks/useToggle';\r\nimport EditTodoForm from './EditTodoForm';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport { DispatchContext } from './context/todos.context';\r\n\r\nfunction Todo({ id, task, completed }) {\r\n  const dispatch = useContext(DispatchContext);\r\n  const [isEditing, toggle] = useToggle(false);\r\n  return (\r\n    <ListItem style={{ height: '64px' }} key={id}>\r\n      {isEditing ? (\r\n        <EditTodoForm id={id} task={task} toggleEditForm={toggle} />\r\n      ) : (\r\n        <>\r\n          <Checkbox\r\n            tabIndex={-1}\r\n            checked={completed}\r\n            onClick={() => dispatch({ type: 'TOGGLE', id: id })}\r\n          />\r\n\r\n          <ListItemText\r\n            style={{ textDecoration: completed ? 'line-through' : 'none' }}\r\n          >\r\n            {task}\r\n          </ListItemText>\r\n          <ListItemSecondaryAction>\r\n            <IconButton\r\n              aria-label='Delete'\r\n              onClick={() => dispatch({ type: 'REMOVE', id: id })}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n            <IconButton aria-label='Edit' onClick={toggle}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </>\r\n      )}\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nexport default memo(Todo);\r\n","import { useState } from 'react';\r\n\r\nexport default function useToggle(initialVal = false) {\r\n  // call useState, \"reserve a piece of state\"\r\n  const [state, setState] = useState(initialVal);\r\n  const toggle = () => {\r\n    setState(!state);\r\n  };\r\n  // return piece of state AND  a function to toggle it\r\n  return [state, toggle];\r\n}\r\n","import React, { useContext } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { TodosContext } from './context/todos.context';\r\n\r\nimport Todo from './Todo';\r\n\r\nexport default function TodoList() {\r\n  const todos = useContext(TodosContext);\r\n  if (todos.length)\r\n    return (\r\n      <Paper>\r\n        <List>\r\n          {todos.map((todo, i) => (\r\n            <React.Fragment key={i}>\r\n              <Todo {...todo} key={todo.id} />\r\n              {i < todos.length - 1 && <Divider />}\r\n            </React.Fragment>\r\n          ))}\r\n        </List>\r\n      </Paper>\r\n    );\r\n  return null;\r\n}\r\n","import React, { useContext } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport useInputState from './hooks/useInputState';\r\nimport { DispatchContext } from './context/todos.context';\r\n\r\nexport default function TodoForm() {\r\n  const [value, handleChange, reset] = useInputState('');\r\n  const dispatch = useContext(DispatchContext);\r\n  return (\r\n    <Paper style={{ margin: '1rem 0', padding: '0 1rem' }}>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          dispatch({ type: 'ADD', task: value });\r\n          reset();\r\n        }}\r\n      >\r\n        <TextField\r\n          value={value}\r\n          onChange={handleChange}\r\n          margin='normal'\r\n          label='Add New Todo'\r\n          fullWidth\r\n        />\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport TodoList from './TodoList';\r\nimport TodoForm from './TodoForm';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport ToolBar from '@material-ui/core/ToolBar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { TodosProvider } from './context/todos.context';\r\n\r\nexport default function TodoApp() {\r\n  return (\r\n    <Paper\r\n      style={{\r\n        padding: 0,\r\n        margin: 0,\r\n        height: '100vh',\r\n        backgroundColor: '#fafafa'\r\n      }}\r\n      elevation={0}\r\n    >\r\n      <AppBar color='primary' position='static' style={{ height: '64px' }}>\r\n        <ToolBar>\r\n          <Typography color='inherit'> TODOS WITH HOOKS</Typography>\r\n        </ToolBar>\r\n      </AppBar>\r\n      <Grid container justify='center' style={{ marginTop: '1rem' }}>\r\n        <Grid item xs={11} md={8} lg={4}>\r\n          <TodosProvider>\r\n            <TodoForm />\r\n            <TodoList />\r\n          </TodosProvider>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\nimport TodoApp from './TodoApp';\n\nfunction App() {\n  return <TodoApp />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}